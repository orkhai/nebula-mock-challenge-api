{
  "version": 3,
  "sources": ["../../../../../src/controllers/score/submitScore.ts", "../../../../../node_modules/uuid/dist/esm/stringify.js", "../../../../../node_modules/uuid/dist/esm/rng.js", "../../../../../node_modules/uuid/dist/esm/native.js", "../../../../../node_modules/uuid/dist/esm/v4.js", "../../../../../src/lib/dynamoClient.ts", "../../../../../src/lib/cognitoClient.ts", "../../../../../src/lib/websocketClient.ts"],
  "sourcesContent": ["import { APIGatewayProxyHandler } from \"aws-lambda\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { DeleteCommand, PutCommand, ScanCommand } from \"@aws-sdk/lib-dynamodb\";\nimport dynamoClient from \"../../lib/dynamoClient\";\nimport { PostToConnectionCommand } from \"@aws-sdk/client-apigatewaymanagementapi\";\nimport { GetUserCommand } from \"@aws-sdk/client-cognito-identity-provider\";\nimport { cognitoClient } from \"../../lib/cognitoClient\";\nimport { websocketClient } from \"../../lib/websocketClient\";\n\nexport const submitScore: APIGatewayProxyHandler = async (event: any) => {\n  try {\n    const authHeader =\n      event.headers.Authorization || event.headers.authorization;\n\n    if (!authHeader || !authHeader.startsWith(\"Bearer \"))\n      return {\n        statusCode: 401,\n        body: JSON.stringify({ message: \"Unauthorized\" }),\n      };\n\n    const token = authHeader.split(\" \")[1];\n\n    const user = await cognitoClient.send(\n      new GetUserCommand({ AccessToken: token })\n    );\n\n    const attributes = (user.UserAttributes || []).reduce<\n      Record<string, string>\n    >((acc, a) => {\n      acc[a.Name!] = a.Value!;\n      return acc;\n    }, {});\n\n    const user_id = attributes[\"sub\"];\n    const user_name =\n      attributes[\"preferred_username\"] ||\n      attributes[\"name\"] ||\n      \"unknown user name\";\n\n    const { score } = JSON.parse(event.body || {});\n    if (typeof score !== \"number\") {\n      return {\n        statusCode: 400,\n        body: JSON.stringify({ message: \"Score must be a number\" }),\n      };\n    }\n\n    const item = {\n      id: uuidv4(),\n      user_id,\n      user_name,\n      score: Number(score),\n      timestamp: Date.now(),\n    };\n\n    await dynamoClient.send(\n      new PutCommand({\n        TableName: process.env.LEADERBOARD_TABLE_NAME ?? \"\",\n        Item: item,\n      })\n    );\n\n    if (score > 1000) {\n      const connections = await dynamoClient.send(\n        new ScanCommand({\n          TableName: process.env.WEBSOCKET_CONNECTIONS_TABLE_NAME,\n          ProjectionExpression: \"connectionId\",\n        })\n      );\n\n      const items = connections.Items || [];\n      console.log(\"Connections count:\", connections.Count);\n\n      const messagePayload = JSON.stringify({\n        event: \"high_score\",\n        data: {\n          user_id,\n          user_name,\n          score,\n        },\n      });\n\n      for (const item of items) {\n        const connectionId = item.connectionId as string;\n        console.log(\"Sending to connectionId:\", connectionId);\n\n        try {\n          await websocketClient.send(\n            new PostToConnectionCommand({\n              ConnectionId: connectionId,\n              Data: Buffer.from(messagePayload),\n            })\n          );\n        } catch (error: any) {\n          console.error(\"PostToConnection error\", error);\n          if (\n            error.name === \"GoneException\" ||\n            error.$metadata?.httpStatusCode === 410\n          ) {\n            console.log(\"Deleting stale connectionId:\", connectionId);\n            await dynamoClient.send(\n              new DeleteCommand({\n                TableName: process.env.WEBSOCKET_CONNECTIONS_TABLE_NAME!,\n                Key: { connectionId },\n              })\n            );\n          }\n        }\n      }\n    }\n\n    return {\n      statusCode: 200,\n      body: JSON.stringify({ message: \"Score submitted.\", item }),\n    };\n  } catch (error: any) {\n    return {\n      statusCode: 500,\n      body: JSON.stringify({ message: error.message }),\n    };\n  }\n};\n", "import validate from './validate.js';\nconst byteToHex = [];\nfor (let i = 0; i < 256; ++i) {\n    byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n    return (byteToHex[arr[offset + 0]] +\n        byteToHex[arr[offset + 1]] +\n        byteToHex[arr[offset + 2]] +\n        byteToHex[arr[offset + 3]] +\n        '-' +\n        byteToHex[arr[offset + 4]] +\n        byteToHex[arr[offset + 5]] +\n        '-' +\n        byteToHex[arr[offset + 6]] +\n        byteToHex[arr[offset + 7]] +\n        '-' +\n        byteToHex[arr[offset + 8]] +\n        byteToHex[arr[offset + 9]] +\n        '-' +\n        byteToHex[arr[offset + 10]] +\n        byteToHex[arr[offset + 11]] +\n        byteToHex[arr[offset + 12]] +\n        byteToHex[arr[offset + 13]] +\n        byteToHex[arr[offset + 14]] +\n        byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n    const uuid = unsafeStringify(arr, offset);\n    if (!validate(uuid)) {\n        throw TypeError('Stringified UUID is invalid');\n    }\n    return uuid;\n}\nexport default stringify;\n", "import { randomFillSync } from 'crypto';\nconst rnds8Pool = new Uint8Array(256);\nlet poolPtr = rnds8Pool.length;\nexport default function rng() {\n    if (poolPtr > rnds8Pool.length - 16) {\n        randomFillSync(rnds8Pool);\n        poolPtr = 0;\n    }\n    return rnds8Pool.slice(poolPtr, (poolPtr += 16));\n}\n", "import { randomUUID } from 'crypto';\nexport default { randomUUID };\n", "import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n    if (native.randomUUID && !buf && !options) {\n        return native.randomUUID();\n    }\n    options = options || {};\n    const rnds = options.random ?? options.rng?.() ?? rng();\n    if (rnds.length < 16) {\n        throw new Error('Random bytes length must be >= 16');\n    }\n    rnds[6] = (rnds[6] & 0x0f) | 0x40;\n    rnds[8] = (rnds[8] & 0x3f) | 0x80;\n    if (buf) {\n        offset = offset || 0;\n        if (offset < 0 || offset + 16 > buf.length) {\n            throw new RangeError(`UUID byte range ${offset}:${offset + 15} is out of buffer bounds`);\n        }\n        for (let i = 0; i < 16; ++i) {\n            buf[offset + i] = rnds[i];\n        }\n        return buf;\n    }\n    return unsafeStringify(rnds);\n}\nexport default v4;\n", "import { DynamoDBClient } from \"@aws-sdk/client-dynamodb\";\nimport { DynamoDBDocumentClient } from \"@aws-sdk/lib-dynamodb\";\n\nconst client = new DynamoDBClient({\n  region: process.env.AWS_REGION,\n});\n\nconst dynamoClient = DynamoDBDocumentClient.from(client);\n\nexport default dynamoClient;\n", "import { CognitoIdentityProviderClient } from \"@aws-sdk/client-cognito-identity-provider\";\n\nexport const cognitoClient = new CognitoIdentityProviderClient({\n  region: process.env.AWS_REGION,\n});\n", "import { ApiGatewayManagementApiClient } from \"@aws-sdk/client-apigatewaymanagementapi\";\n\nexport const websocketClient = new ApiGatewayManagementApiClient({\n  endpoint: process.env.WEBSOCKET_CONNECTION_URL,\n  region: process.env.AWS_REGION,\n});\n"],
  "mappings": "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",
  "names": ["import_crypto", "import_lib_dynamodb", "import_client_apigatewaymanagementapi", "import_client_cognito_identity_provider", "item"]
}
