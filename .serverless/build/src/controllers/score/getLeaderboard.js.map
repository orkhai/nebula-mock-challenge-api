{
  "version": 3,
  "sources": ["../../../../../src/controllers/score/getLeaderboard.ts", "../../../../../src/lib/dynamoClient.ts"],
  "sourcesContent": ["import { ScanCommand } from \"@aws-sdk/client-dynamodb\";\nimport dynamoClient from \"../../lib/dynamoClient\";\n\nexport const getLeaderboard = async () => {\n  try {\n    const data = await dynamoClient.send(\n      new ScanCommand({\n        TableName: process.env.LEADERBOARD_TABLE_NAME,\n      })\n    );\n\n    const topScore = data.Items?.sort((a: any, b: any) => b.score - a.score)[0];\n\n    return {\n      statusCode: 200,\n      body: JSON.stringify({ topScore }),\n    };\n  } catch (error: any) {\n    return {\n      statusCode: 400,\n      body: JSON.stringify({\n        message: error.message,\n      }),\n    };\n  }\n};\n", "import { DynamoDBClient } from \"@aws-sdk/client-dynamodb\";\nimport { DynamoDBDocumentClient } from \"@aws-sdk/lib-dynamodb\";\n\nconst client = new DynamoDBClient({\n  region: process.env.AWS_REGION,\n});\n\nconst dynamoClient = DynamoDBDocumentClient.from(client);\n\nexport default dynamoClient;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAA,0BAA4B;;;ACA5B,6BAA+B;AAC/B,0BAAuC;AAEvC,IAAM,SAAS,IAAI,sCAAe;AAAA,EAChC,QAAQ,QAAQ,IAAI;AACtB,CAAC;AAED,IAAM,eAAe,2CAAuB,KAAK,MAAM;AAEvD,IAAO,uBAAQ;;;ADNR,IAAM,iBAAiB,YAAY;AACxC,MAAI;AACF,UAAM,OAAO,MAAM,qBAAa;AAAA,MAC9B,IAAI,oCAAY;AAAA,QACd,WAAW,QAAQ,IAAI;AAAA,MACzB,CAAC;AAAA,IACH;AAEA,UAAM,WAAW,KAAK,OAAO,KAAK,CAAC,GAAQ,MAAW,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC;AAE1E,WAAO;AAAA,MACL,YAAY;AAAA,MACZ,MAAM,KAAK,UAAU,EAAE,SAAS,CAAC;AAAA,IACnC;AAAA,EACF,SAAS,OAAY;AACnB,WAAO;AAAA,MACL,YAAY;AAAA,MACZ,MAAM,KAAK,UAAU;AAAA,QACnB,SAAS,MAAM;AAAA,MACjB,CAAC;AAAA,IACH;AAAA,EACF;AACF;",
  "names": ["import_client_dynamodb"]
}
